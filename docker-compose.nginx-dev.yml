# 开发环境 Nginx 代理服务配置
# 使用: docker-compose -f docker-compose.nginx-dev.yml up

version: '3.8'

# 数据卷配置
volumes:
  nginx_logs:
    driver: local
  ssl_certs:
    driver: local

services:
  # 开发环境 Nginx 代理
  nginx-dev:
    image: ssl-manager-nginx-proxy:latest
    container_name: ssl-manager-nginx-dev
    restart: unless-stopped
    environment:
      DOMAIN_NAME: localhost
    volumes:
      - nginx_logs:/var/log/nginx
      - ssl_certs:/var/www/ssl-certs:ro
    ports:
      - "8080:80"
      - "8443:443"
    healthcheck:
      test: ["CMD", "/usr/local/bin/health-check.sh"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 10s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # 模拟前端服务（用于测试）
  frontend-mock:
    image: nginx:alpine
    container_name: ssl-manager-frontend-mock
    restart: unless-stopped
    volumes:
      - ./test/frontend-mock:/usr/share/nginx/html:ro
    ports:
      - "3000:80"
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/"]
      interval: 30s
      timeout: 3s
      retries: 3

  # 模拟后端服务（用于测试）
  backend-mock:
    image: nginx:alpine
    container_name: ssl-manager-backend-mock
    restart: unless-stopped
    volumes:
      - ./test/backend-mock:/usr/share/nginx/html:ro
    ports:
      - "8000:80"
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/"]
      interval: 30s
      timeout: 3s
      retries: 3
