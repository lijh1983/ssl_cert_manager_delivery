# ===========================================
# SSL证书管理系统 - 环境变量配置模板
# ===========================================
#
# 📋 使用说明:
# 1. 复制此文件为 .env: cp .env.example .env
# 2. 根据实际环境修改配置值
# 3. 生产环境请务必修改所有密码和密钥！
#
# 🔐 安全提示:
# - 所有包含"CHANGE_THIS"的值都必须修改
# - 密钥长度建议至少32位字符
# - 生成安全密钥命令: openssl rand -base64 32
# - 生成安全密码命令: openssl rand -base64 16
#
# 🚀 快速部署:
# - 开发环境: ./scripts/deploy-local.sh
# - 生产环境: ./scripts/deploy-production.sh
#
# 📖 详细文档: 请参考 README.md 和 docs/ 目录
#
# 🐳 Docker环境说明:
# - Docker Compose环境中，服务间通信使用服务名 (如mysql, redis)
# - 独立部署环境中，使用实际IP地址 (如127.0.0.1, 192.168.1.100)
# - 本配置文件默认使用127.0.0.1，适用于独立部署
# - Docker环境请根据实际情况修改为服务名

# ===========================================
# 基础配置
# ===========================================
ENVIRONMENT=production

# ===========================================
# 数据库配置 (MySQL)
# ===========================================
# MySQL服务器地址 (Docker环境使用服务名mysql，独立部署使用127.0.0.1或实际IP)
MYSQL_HOST=127.0.0.1
MYSQL_PORT=3306
MYSQL_DATABASE=ssl_manager
MYSQL_USER=ssl_manager
MYSQL_USERNAME=ssl_manager
MYSQL_PASSWORD=CHANGE_THIS_TO_A_SECURE_MYSQL_PASSWORD
MYSQL_CHARSET=utf8mb4

# 注意：应用程序不应该使用MySQL root用户！
# MYSQL_ROOT_PASSWORD 仅用于Docker容器初始化，应用程序使用上述专用用户

# 数据库连接URL (可选，程序会自动使用上述环境变量构建)
# 如果设置了DATABASE_URL，将优先使用此URL，否则使用上述独立变量构建
# 格式: mysql+pymysql://${MYSQL_USER}:${MYSQL_PASSWORD}@${MYSQL_HOST}:${MYSQL_PORT}/${MYSQL_DATABASE}?charset=${MYSQL_CHARSET}
DATABASE_URL=mysql+pymysql://ssl_manager:CHANGE_THIS_TO_A_SECURE_MYSQL_PASSWORD@127.0.0.1:3306/ssl_manager?charset=utf8mb4

# ===========================================
# Redis配置
# ===========================================
# Redis服务器地址 (Docker环境使用服务名redis，独立部署使用127.0.0.1或实际IP)
REDIS_HOST=127.0.0.1
REDIS_PORT=6379
REDIS_PASSWORD=CHANGE_THIS_TO_A_SECURE_REDIS_PASSWORD

# ===========================================
# 安全配置
# ===========================================
# 请务必更改为强密码！(至少32位字符)
# 生成强密钥命令: openssl rand -base64 32
SECRET_KEY=CHANGE_THIS_TO_A_SECURE_32_CHAR_SECRET_KEY_IN_PRODUCTION
JWT_SECRET_KEY=CHANGE_THIS_TO_A_SECURE_32_CHAR_JWT_SECRET_KEY_TOO
CSRF_SECRET_KEY=CHANGE_THIS_TO_A_SECURE_32_CHAR_CSRF_SECRET_KEY

# JWT配置
JWT_ACCESS_TOKEN_EXPIRES=3600
JWT_ALGORITHM=HS256

# ===========================================
# SSL证书配置
# ===========================================
# Let's Encrypt ACME目录URL
ACME_DIRECTORY_URL=https://acme-v02.api.letsencrypt.org/directory
# 测试环境使用: https://acme-staging-v02.api.letsencrypt.org/directory
ACME_STAGING_URL=https://acme-staging-v02.api.letsencrypt.org/directory

# SSL证书存储路径
SSL_CERT_PATH=/app/certs
CERT_STORAGE_PATH=/app/certs

# 默认CA提供商
DEFAULT_CA=letsencrypt

# ===========================================
# 域名配置
# ===========================================
DOMAIN_NAME=ssl.gzyggl.com
EMAIL=admin@gzyggl.com

# 前端API基础URL
VITE_API_BASE_URL=/api

# CORS配置
CORS_ORIGINS=http://localhost:3000,http://localhost:8080

# ===========================================
# 服务端口配置 (可选，默认通过反向代理访问)
# ===========================================
BACKEND_PORT=8000
FRONTEND_PORT=80
PROMETHEUS_PORT=9090
GRAFANA_PORT=3000
HTTP_PORT=80
HTTPS_PORT=443
NGINX_HTTP_PORT=80
NGINX_HTTPS_PORT=443

# ===========================================
# 应用环境配置
# ===========================================
FLASK_ENV=production
FLASK_DEBUG=false

# 日志配置
LOG_LEVEL=INFO
LOG_FILE=/app/logs/ssl_manager.log

# ===========================================
# 性能配置
# ===========================================
# 后端工作进程数
BACKEND_WORKERS=2
WORKERS=2

# 实例标识
INSTANCE_ID=backend1

# ===========================================
# 监控配置
# ===========================================
ENABLE_METRICS=true
METRICS_PORT=9090

# Grafana配置
GRAFANA_USER=admin
GRAFANA_PASSWORD=CHANGE_THIS_TO_A_SECURE_GRAFANA_PASSWORD

# ===========================================
# 阿里云特定配置 (可选)
# ===========================================
# 如果使用阿里云服务，可以配置以下参数
# ALIYUN_ACCESS_KEY_ID=your_access_key_id
# ALIYUN_ACCESS_KEY_SECRET=your_access_key_secret
# ALIYUN_REGION=cn-hangzhou

# ===========================================
# 备份配置 (可选)
# ===========================================
# BACKUP_ENABLED=true
# BACKUP_SCHEDULE=0 2 * * *
# BACKUP_RETENTION_DAYS=30

# ===========================================
# 邮件通知配置 (可选)
# ===========================================
# SMTP服务器配置
SMTP_SERVER=smtp.gmail.com
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USERNAME=CHANGE_THIS_TO_YOUR_EMAIL@example.com
SMTP_PASSWORD=CHANGE_THIS_TO_YOUR_EMAIL_PASSWORD
SMTP_USE_TLS=true

# 通知邮件配置
# NOTIFICATION_EMAIL=admin@example.com

# ===========================================
# 前端开发配置 (开发环境使用)
# ===========================================
# 开发服务器配置
VITE_DEV_SERVER_HOST=0.0.0.0
VITE_DEV_SERVER_PORT=3000
VITE_DEV_SERVER_OPEN=false
VITE_DEV_SERVER_CORS=true

# 代理配置
VITE_PROXY_ENABLED=true
# 前端开发代理目标 (指向后端API服务)
VITE_PROXY_TARGET=http://127.0.0.1:8000

# API配置
API_BASE_URL=/api

# 构建配置
VITE_BUILD_MINIFY=true
VITE_BUILD_SOURCEMAP=false
VITE_APP_VERSION=1.0.0

# Vue应用配置
VUE_APP_API_BASE_URL=/api
VUE_APP_TITLE=SSL证书管理器
VUE_APP_VERSION=1.0.0

# ===========================================
# 数据库初始化配置 (可选)
# ===========================================
# SKIP_DB_INIT=false
# SKIP_MIGRATIONS=false

# ===========================================
# 安全配置 (高级)
# ===========================================
# 密码策略
PASSWORD_MIN_LENGTH=8
BCRYPT_LOG_ROUNDS=12

# 速率限制
RATE_LIMIT_DEFAULT=100
# 速率限制存储URL (程序会使用REDIS_HOST和REDIS_PORT构建)
RATE_LIMIT_STORAGE_URL=redis://127.0.0.1:6379/1

# ===========================================
# SSL证书管理配置 (高级)
# ===========================================
# 证书清理和续期
CERT_CLEANUP_DAYS=30
CERT_RENEWAL_DAYS=30

# 客户端配置
CLIENT_HEARTBEAT_INTERVAL=60
CLIENT_OFFLINE_THRESHOLD=300

# Webhook配置
WEBHOOK_TIMEOUT=30
WEBHOOK_RETRY_COUNT=3

# ===========================================
# 高级配置 (通常不需要修改)
# ===========================================
# Docker网络配置
# NETWORK_SUBNET=172.20.0.0/16

# 资源限制
# MYSQL_MEMORY_LIMIT=1G
# REDIS_MEMORY_LIMIT=512M
# BACKEND_MEMORY_LIMIT=1G
# FRONTEND_MEMORY_LIMIT=256M
# NGINX_MEMORY_LIMIT=256M

# ===========================================
# MySQL高级配置 (可选)
# ===========================================
# 连接池配置
MYSQL_POOL_SIZE=10
MYSQL_MAX_OVERFLOW=20
MYSQL_POOL_TIMEOUT=30
MYSQL_POOL_RECYCLE=3600

# 性能配置
MYSQL_MAX_CONNECTIONS=200
MYSQL_INNODB_BUFFER_POOL_SIZE=128M
MYSQL_INNODB_LOG_FILE_SIZE=64M
MYSQL_QUERY_CACHE_SIZE=32M

# SSL配置 (可选)
MYSQL_SSL_DISABLED=true
MYSQL_SSL_CA=/path/to/ca.pem
MYSQL_SSL_CERT=/path/to/client-cert.pem
MYSQL_SSL_KEY=/path/to/client-key.pem

# ===========================================
# 监控和日志配置 (可选)
# ===========================================
# Grafana管理员配置
GRAFANA_ADMIN_PASSWORD=CHANGE_THIS_TO_A_SECURE_GRAFANA_ADMIN_PASSWORD

# ELK Stack配置 (如果使用)
# Elasticsearch服务器地址 (Docker环境使用服务名，独立部署使用实际IP)
ELASTICSEARCH_HOSTS=127.0.0.1:9200
KIBANA_HOST=127.0.0.1:5601
FLUENTD_PORT=24224
