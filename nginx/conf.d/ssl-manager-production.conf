# SSL证书管理系统 - Nginx生产环境配置
# 支持负载均衡、SSL终止、安全头部等功能

# 后端API服务器组（负载均衡）
upstream ssl_manager_backend {
    # 负载均衡策略：least_conn（最少连接）
    least_conn;
    
    # 后端服务器列表（从环境变量读取）
    server backend1:5000 max_fails=3 fail_timeout=30s weight=1;
    server backend2:5000 max_fails=3 fail_timeout=30s weight=1;
    server backend3:5000 max_fails=3 fail_timeout=30s weight=1;
    
    # 健康检查（需要nginx-plus或第三方模块）
    # health_check uri=/api/health interval=30s fails=3 passes=2;
    
    # 保持连接
    keepalive 32;
}

# WebSocket支持（如需要）
upstream ssl_manager_websocket {
    server backend1:5000;
    server backend2:5000;
    server backend3:5000;
}

# 限制请求速率
limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=login_limit:10m rate=1r/s;

# 限制连接数
limit_conn_zone $binary_remote_addr zone=conn_limit:10m;

# 缓存配置
proxy_cache_path /var/cache/nginx/ssl_manager levels=1:2 keys_zone=ssl_manager_cache:10m max_size=1g inactive=60m use_temp_path=off;

# HTTP重定向到HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name ssl-manager.example.com;
    
    # 安全头部
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    
    # Let's Encrypt验证路径
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
        try_files $uri =404;
    }
    
    # 其他所有请求重定向到HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# HTTPS主配置
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name ssl-manager.example.com;
    
    # SSL证书配置
    ssl_certificate /etc/ssl/certs/ssl-manager.crt;
    ssl_certificate_key /etc/ssl/private/ssl-manager.key;
    ssl_trusted_certificate /etc/ssl/certs/ssl-manager-chain.crt;
    
    # SSL配置优化
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 1d;
    ssl_session_tickets off;
    
    # OCSP Stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;
    
    # 安全头部
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;
    
    # CSP头部
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self'; connect-src 'self'; frame-ancestors 'none';" always;
    
    # 连接限制
    limit_conn conn_limit 10;
    
    # 客户端配置
    client_max_body_size 10M;
    client_body_buffer_size 128k;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;
    
    # 超时配置
    client_body_timeout 60s;
    client_header_timeout 60s;
    send_timeout 60s;
    
    # Gzip压缩
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # 日志配置
    access_log /var/log/nginx/ssl-manager-access.log combined;
    error_log /var/log/nginx/ssl-manager-error.log warn;
    
    # 前端静态资源
    location / {
        root /var/www/ssl-manager;
        index index.html;
        try_files $uri $uri/ /index.html;
        
        # 缓存配置
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header X-Content-Type-Options nosniff;
        }
        
        # HTML文件不缓存
        location ~* \.html$ {
            expires -1;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
        }
    }
    
    # API代理
    location /api/ {
        # 速率限制
        limit_req zone=api_limit burst=20 nodelay;
        
        # 代理配置
        proxy_pass http://ssl_manager_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # 超时配置
        proxy_connect_timeout 30s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # 缓存配置（仅对GET请求）
        proxy_cache ssl_manager_cache;
        proxy_cache_methods GET HEAD;
        proxy_cache_valid 200 302 10m;
        proxy_cache_valid 404 1m;
        proxy_cache_use_stale error timeout invalid_header updating http_500 http_502 http_503 http_504;
        proxy_cache_bypass $http_pragma $http_authorization;
        
        # 添加缓存状态头部
        add_header X-Cache-Status $upstream_cache_status;
    }
    
    # 登录API特殊限制
    location /api/v1/auth/login {
        limit_req zone=login_limit burst=5 nodelay;
        
        proxy_pass http://ssl_manager_backend;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # 禁用缓存
        proxy_no_cache 1;
        proxy_cache_bypass 1;
    }
    
    # WebSocket支持
    location /ws/ {
        proxy_pass http://ssl_manager_websocket;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket特殊超时配置
        proxy_read_timeout 86400s;
        proxy_send_timeout 86400s;
    }
    
    # 健康检查端点
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
    
    # Nginx状态页面（仅内网访问）
    location /nginx_status {
        stub_status on;
        access_log off;
        allow 127.0.0.1;
        allow 10.0.0.0/8;
        allow 172.16.0.0/12;
        allow 192.168.0.0/16;
        deny all;
    }
    
    # 禁止访问敏感文件
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    location ~ ~$ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # 禁止访问配置文件
    location ~* \.(conf|ini|log|bak|backup|old)$ {
        deny all;
        access_log off;
        log_not_found off;
    }
}

# 管理后台（可选，单独域名）
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name admin.ssl-manager.example.com;

    # SSL证书配置（可以使用相同证书或单独证书）
    ssl_certificate /etc/ssl/certs/ssl-manager.crt;
    ssl_certificate_key /etc/ssl/private/ssl-manager.key;

    # SSL配置（继承主配置）
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 1d;

    # 基本认证（额外安全层）
    auth_basic "SSL Manager Admin";
    auth_basic_user_file /etc/nginx/.htpasswd;

    # IP白名单（仅允许特定IP访问）
    allow 192.168.1.0/24;
    allow 10.0.0.0/8;
    allow 172.16.0.0/12;
    deny all;

    # 安全头部
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;

    # 管理API代理
    location /api/ {
        proxy_pass http://ssl_manager_backend;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # 禁用缓存
        proxy_no_cache 1;
        proxy_cache_bypass 1;
    }

    # 管理界面
    location / {
        root /var/www/ssl-manager-admin;
        index index.html;
        try_files $uri $uri/ /index.html;
    }
}
