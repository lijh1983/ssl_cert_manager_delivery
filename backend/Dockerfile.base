# 后端基础镜像 - 仅包含依赖
# 基于Python 3.10 Slim，预安装所有Python依赖
# 使用阿里云镜像加速器优化拉取速度
# 针对中国国内网络环境优化

FROM python:3.10-slim

# 设置环境变量
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1 \
    DEBIAN_FRONTEND=noninteractive

# 设置工作目录
WORKDIR /app

# 配置阿里云Debian镜像源（解决网络连接问题）
RUN echo "=== 配置阿里云Debian镜像源 ===" && \
    # 备份原始sources.list（如果存在）
    if [ -f /etc/apt/sources.list ]; then cp /etc/apt/sources.list /etc/apt/sources.list.backup; fi && \
    # 检测Debian版本
    DEBIAN_CODENAME=$(cat /etc/os-release | grep VERSION_CODENAME | cut -d= -f2 || echo "bookworm") && \
    echo "检测到Debian版本: $DEBIAN_CODENAME" && \
    # 配置阿里云镜像源
    echo "# 阿里云Debian镜像源" > /etc/apt/sources.list && \
    echo "deb https://mirrors.aliyun.com/debian/ $DEBIAN_CODENAME main non-free-firmware" >> /etc/apt/sources.list && \
    echo "deb-src https://mirrors.aliyun.com/debian/ $DEBIAN_CODENAME main non-free-firmware" >> /etc/apt/sources.list && \
    echo "" >> /etc/apt/sources.list && \
    echo "deb https://mirrors.aliyun.com/debian-security/ $DEBIAN_CODENAME-security main non-free-firmware" >> /etc/apt/sources.list && \
    echo "deb-src https://mirrors.aliyun.com/debian-security/ $DEBIAN_CODENAME-security main non-free-firmware" >> /etc/apt/sources.list && \
    echo "" >> /etc/apt/sources.list && \
    echo "deb https://mirrors.aliyun.com/debian/ $DEBIAN_CODENAME-updates main non-free-firmware" >> /etc/apt/sources.list && \
    echo "deb-src https://mirrors.aliyun.com/debian/ $DEBIAN_CODENAME-updates main non-free-firmware" >> /etc/apt/sources.list && \
    echo "阿里云Debian镜像源配置完成"

# 更新系统并安装必要的系统依赖
RUN echo "=== 更新系统包 ===" && \
    apt-get update && \
    apt-get install -y --no-install-recommends \
        build-essential \
        curl \
        wget \
        netcat-openbsd \
        git \
        pkg-config \
        libssl-dev \
        libffi-dev \
        libpq-dev \
        ca-certificates \
        && \
    echo "=== 系统包安装完成 ==="

# 配置阿里云pip镜像源（中国国内网络优化）
RUN echo "=== 配置pip镜像源 ===" && \
    pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/ && \
    pip config set global.trusted-host mirrors.aliyun.com && \
    pip config set global.timeout 120 && \
    pip config set global.retries 5 && \
    pip config set global.break-system-packages true && \
    pip config list && \
    echo "=== pip镜像源配置完成 ==="

# 升级pip和安装基础工具
RUN echo "=== 升级pip ===" && \
    pip install --upgrade pip setuptools wheel && \
    pip --version && \
    echo "=== pip升级完成 ==="

# 复制依赖配置文件
COPY requirements.txt ./

# 安装Python依赖（中国国内网络优化）
RUN echo "=== 开始安装Python依赖 ===" && \
    pip install --no-cache-dir --timeout 300 --retries 5 -r requirements.txt && \
    echo "=== Python依赖安装完成 ===" && \
    pip list

# 创建非root用户
RUN echo "=== 创建应用用户 ===" && \
    groupadd -r appuser && \
    useradd -r -g appuser -d /app -s /sbin/nologin -c "App User" appuser && \
    echo "=== 用户创建完成 ==="

# 创建必要的目录并设置权限
RUN mkdir -p /app/logs /app/data /app/certs && \
    chown -R appuser:appuser /app && \
    chmod -R 755 /app

# 清理系统缓存
RUN echo "=== 清理系统缓存 ===" && \
    apt-get autoremove -y && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* && \
    echo "=== 缓存清理完成 ==="

# 切换到非root用户
USER appuser

# 验证安装
RUN echo "=== 验证Python环境 ===" && \
    python --version && \
    pip --version && \
    python -c "import sys; print('Python path:', sys.path)" && \
    echo "=== 基础镜像构建完成 ==="

# 标签信息
LABEL maintainer="SSL Certificate Manager Team" \
      version="1.0.0" \
      description="Backend Base Image with Dependencies" \
      stage="base" \
      component="backend"

# 默认命令
CMD ["python", "--version"]
