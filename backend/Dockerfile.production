# SSL证书管理系统后端 - 生产环境Dockerfile
# 基于Python 3.11-slim构建，优化性能和安全性

FROM python:3.11-slim as builder

# 设置构建参数
ARG BUILD_DATE
ARG VCS_REF
ARG VERSION

# 添加标签
LABEL maintainer="SSL Manager Team <admin@example.com>" \
      org.label-schema.build-date=$BUILD_DATE \
      org.label-schema.name="ssl-manager-backend" \
      org.label-schema.description="SSL Certificate Manager Backend Service" \
      org.label-schema.url="https://ssl-manager.example.com" \
      org.label-schema.vcs-ref=$VCS_REF \
      org.label-schema.vcs-url="https://github.com/your-org/ssl-cert-manager" \
      org.label-schema.vendor="Your Organization" \
      org.label-schema.version=$VERSION \
      org.label-schema.schema-version="1.0"

# 设置环境变量
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1 \
    DEBIAN_FRONTEND=noninteractive

# 安装系统依赖
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    pkg-config \
    libssl-dev \
    libffi-dev \
    libmysqlclient-dev \
    curl \
    && rm -rf /var/lib/apt/lists/*

# 创建应用用户
RUN groupadd -r sslmanager && useradd -r -g sslmanager sslmanager

# 设置工作目录
WORKDIR /app

# 复制依赖文件
COPY requirements.txt requirements-prod.txt ./

# 安装Python依赖
RUN pip install --no-cache-dir -r requirements.txt -r requirements-prod.txt

# 生产环境镜像
FROM python:3.11-slim as production

# 设置环境变量
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    FLASK_ENV=production \
    FLASK_DEBUG=false \
    DEBIAN_FRONTEND=noninteractive

# 安装运行时依赖
RUN apt-get update && apt-get install -y --no-install-recommends \
    libmysqlclient21 \
    libssl3 \
    libffi8 \
    curl \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# 创建应用用户和目录
RUN groupadd -r sslmanager && useradd -r -g sslmanager sslmanager \
    && mkdir -p /app /app/logs /app/certs /app/temp \
    && chown -R sslmanager:sslmanager /app

# 从构建阶段复制Python包
COPY --from=builder /usr/local/lib/python3.11/site-packages /usr/local/lib/python3.11/site-packages
COPY --from=builder /usr/local/bin /usr/local/bin

# 设置工作目录
WORKDIR /app

# 复制应用代码
COPY --chown=sslmanager:sslmanager src/ ./src/
COPY --chown=sslmanager:sslmanager config/ ./config/
COPY --chown=sslmanager:sslmanager scripts/ ./scripts/

# 复制启动脚本
COPY --chown=sslmanager:sslmanager docker/entrypoint.sh ./
COPY --chown=sslmanager:sslmanager docker/healthcheck.sh ./

# 设置执行权限
RUN chmod +x entrypoint.sh healthcheck.sh

# 创建版本文件
RUN echo "VERSION=${VERSION:-1.0.0}" > /app/version.txt \
    && echo "BUILD_DATE=${BUILD_DATE}" >> /app/version.txt \
    && echo "VCS_REF=${VCS_REF}" >> /app/version.txt

# 切换到应用用户
USER sslmanager

# 暴露端口
EXPOSE 5000

# 健康检查
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD ./healthcheck.sh

# 设置入口点
ENTRYPOINT ["./entrypoint.sh"]

# 默认命令
CMD ["gunicorn", "--config", "config/gunicorn.conf.py", "src.app:app"]
